import numpy as np
from numpy import log as ln

a = np.array([31.32234, -20.23521, 57.86644, -36.50624, -0.007374, -8.903471, 246.7945, 0])
b = np.array([30.03235, 8.772972, -3.988133, 0.788313, -0.741599, -11.32468, 236.1663, 0])
c = np.array([20.91111, 10.72071, -2.020498, 0.146449, 9.245722, 5.337651, 237.6185, 0])

def S(x):
    if x >= 100 and x <= 700:
        x = x / 1000
        return (a[0] * ln(x) + a[1] * x + a[2] * x ** 2 / 2 + a[3] * x ** 3 / 3 - a[4] / (2 * x ** 2) + a[6]) / 1000
    elif x >= 700 and x <= 2000:
        x = x / 1000
        return (b[0] * ln(x) + b[1] * x + b[2] * x ** 2 / 2 + b[3] * x ** 3 / 3 - b[4] / (2 * x ** 2) + b[6]) / 1000
    elif x >= 2000 and x <= 6000:
        x = x / 1000
        return (c[0] * ln(x) + c[1] * x + c[2] * x ** 2 / 2 + c[3] * x ** 3 / 3 - c[4] / (2 * x ** 2) + c[6]) / 1000
def H(x):
    if x >= 100 and x <= 700:
        x = x / 1000
        return (a[0] * x + a[1] * x ** 2 / 2 + a[2] * x ** 3 / 3 + a[3] * x ** 4 / 4 - a[4] / x + a[5] - a[7])
    elif x >= 700 and x <= 2000:
        x = x / 1000
        return (b[0] * x + b[1] * x ** 2 / 2 + b[2] * x ** 3 / 3 + b[3] * x ** 4 / 4 - b[4] / x + b[5] - a[7])
    elif x >= 2000 and x <= 6000:
        x = x / 1000
        return (c[0] * x + c[1] * x ** 2 / 2 + c[2] * x ** 3 / 3 + c[3] * x ** 4 / 4 - c[4] / x + c[5] - c[7])
def delta_muO(x):
    return 0.5 * (H(x) - (S(x) - S(300)) * x)

print(delta_muO(1900))
